{"mappings":"AAAA,MAAMA,EAAM,CAERC,UAAWC,SAASC,cAAc,SAClCC,YAAaF,SAASC,cAAc,gBACpCE,iBAAkBH,SAASC,cAAc,UACzCG,SAAUJ,SAASK,iBAAiB,UACpCC,kBAAmBN,SAASK,iBAAiB,UAC7CE,gBAAiBP,SAASK,iBAAiB,UAE3CG,UAAYR,SAASC,cAAc,eACnCQ,WAAaT,SAASC,cAAc,gBACpCS,aAAeV,SAASC,cAAc,kBACtCU,aAAeX,SAASC,cAAc,kBAEtCW,YAAa,IAAIC,KACjBC,aAAc,GACdC,WAAY,GACZC,YAAa,GACbC,WAAY,EACZC,IAAK,EACLC,SAAU,IAqCd,SAASC,EAAIC,GACT,OAAOC,OAAOD,GAAOE,SAAS,EAAE,KAlCpCzB,EAAIC,UAAUyB,MAAMC,SACpB,6BACA3B,EAAII,YAAYsB,MAAMC,SACtB,4BACA3B,EAAIK,iBAAiBqB,MAAMC,SAC3B,iGACA3B,EAAIM,SAASsB,SAASC,IAAOA,EAAIH,MAAMC,SACvC,qGACA3B,EAAIQ,kBAAkBoB,SAASC,IAAOA,EAAIH,MAAMC,SAC5C,wCACJ3B,EAAIS,gBAAgBmB,SAASC,IAAOA,EAAIH,MAAMC,SAC1C,mEAGD3B,EAAIc,YAAYgB,WAAa,GAAK9B,EAAIgB,aAAe,IAAIhB,EAAIc,YAAYgB,WAAW,IACjF9B,EAAIgB,aAAehB,EAAIc,YAAYgB,WAAW,EACjD9B,EAAIc,YAAYiB,UAAY,GAAK/B,EAAIiB,WAAa,IAAIjB,EAAIc,YAAYiB,YACnE/B,EAAIiB,WAAajB,EAAIc,YAAYiB,UACvC/B,EAAIkB,YAAclB,EAAIc,YAAYkB,cAClChC,EAAImB,WAAanB,EAAIc,YAAYmB,UAEjCjC,EAAIC,UAAUiC,KAAK,OACnBlC,EAAIC,UAAUsB,MAAQ,GAAGvB,EAAIkB,eAAelB,EAAIgB,gBAAgBhB,EAAIiB,aACpEjB,EAAIC,UAAUkC,IAAM,GAAGnC,EAAIkB,eAAelB,EAAIgB,gBAAgBhB,EAAIiB,aAClEjB,EAAII,YAAYgC,UAAW,EAE3BpC,EAAIC,UAAUoC,iBAAiB,SAC/B,WACOrC,EAAIC,UAAUsB,QAAUvB,EAAIC,UAAUkC,MACrCnC,EAAII,YAAYgC,UAAW,MAOnCpC,EAAII,YAAYiC,iBAAiB,SAEjC,WACIrC,EAAIoB,KAAOL,KAAKuB,MAAMtC,EAAIC,UAAUsB,OAASR,KAAKuB,MAAMtC,EAAIC,UAAUkC,MAAM,IAC5EnC,EAAII,YAAYgC,UAAW,EAC3Bf,SAAWkB,YAAYC,EAAa,QAGxC,MAAMA,EAAe,WACb,IAAIL,EAAMnC,EAAIoB,IAAM,GAChBqB,EAAON,EAAM,GACbO,EACA,SAAeC,KAAKC,MAAMH,EAAO,IAC7B,YAAeE,KAAKC,MAAMH,EAAO,IAChC,YAAcE,KAAKC,MAAMT,EAAM,IAC/B,aAAUQ,KAAKC,MAAM5C,EAAIoB,IAAM,IACxCyB,QAAQC,IAAIJ,GACZ1C,EAAIoB,KAAM,EAElBpB,EAAIU,UAAUqC,YAAczB,EAAIqB,KAAKC,MAAMH,EAAO,KAClDzC,EAAIW,WAAWoC,YAAczB,EAAIqB,KAAKC,MAAMH,EAAO,KACnDzC,EAAIY,aAAamC,YAAczB,EAAIqB,KAAKC,MAAMT,EAAM,KACpDnC,EAAIa,aAAakC,YAAczB,EAAIqB,KAAKC,MAAM5C,EAAIoB,IAAM,KAEjC,IAAZpB,EAAIoB,MACH4B,cAAc3B,UACdrB,EAAII,YAAYgC,UAAW","sources":["src/js/04-timer_without_flatpickr.js"],"sourcesContent":["const ref = {\n \n    inputDate: document.querySelector('input'),\n    startButton: document.querySelector('[data-start]'),\n    containerForTime: document.querySelector('.timer'),\n    divField: document.querySelectorAll('.field'),\n    spanForTimeNumber: document.querySelectorAll('.value'),\n    spanForTimeName: document.querySelectorAll('.label'),\n\n    clockDays : document.querySelector('[data-days]'),\n    clockHours : document.querySelector('[data-hours]'),\n    clockMinutes : document.querySelector('[data-minutes]'),\n    clockSeconds : document.querySelector('[data-seconds]'),\n\n    currentDate: new Date(),\n    correctMonth: '',\n    correctDay: '',\n    correctYear: '',\n    timeNumber: 0,\n    sec: 0,\n    interval: '',\n}\n\n\nref.inputDate.style.cssText +=\n'width: 230px; height: 30px';\nref.startButton.style.cssText +=\n'width: 50px; height: 30px';\nref.containerForTime.style.cssText += \n'display: flex; justify-content: space-between; align-items: center; width:300px; padding: 20px';\nref.divField.forEach((key)=>{key.style.cssText += \n'display: flex; flex-direction: column; justify-content: center; align-items: center; gap: 20px;'});\nref.spanForTimeNumber.forEach((key)=>{key.style.cssText += \n    'font-size: 28px; font-weight: 600;'});\nref.spanForTimeName.forEach((key)=>{key.style.cssText += \n    'font-size: 12px; text-transform: uppercase; font-weight: 500;'});\n\n\nif(ref.currentDate.getMonth() < 10) {ref.correctMonth = `0${ref.currentDate.getMonth()+1}`} \nelse {ref.correctMonth = ref.currentDate.getMonth()+1};\nif(ref.currentDate.getDate() < 10) {ref.correctDay = `0${ref.currentDate.getDate()}`}\nelse {ref.correctDay = ref.currentDate.getDate()};\nref.correctYear = ref.currentDate.getFullYear();\nref.timeNumber = ref.currentDate.getTime();\n\nref.inputDate.type=\"date\";\nref.inputDate.value = `${ref.correctYear}-${ref.correctMonth}-${ref.correctDay}`;\nref.inputDate.min = `${ref.correctYear}-${ref.correctMonth}-${ref.correctDay}`;\nref.startButton.disabled = true;\n\nref.inputDate.addEventListener('input',checkDates);\nfunction checkDates(){\n    if(ref.inputDate.value !== ref.inputDate.min){ \n        ref.startButton.disabled = false;\n    }\n}\n\nfunction pad(value) {\n    return String(value).padStart(2,'0')\n}\nref.startButton.addEventListener('click', startCount)\n\nfunction startCount () {\n    ref.sec = (Date.parse(ref.inputDate.value) - Date.parse(ref.inputDate.min))/1000;\n    ref.startButton.disabled = true;\n    interval = setInterval(countSeconds,1000);\n}\n\nconst countSeconds = function countSeconds() {\n        var min = ref.sec / 60;\n        var hour = min / 60;\n        var day =\n            'Дней: ' + Math.floor(hour / 24) +\n            ', часов: ' + Math.floor(hour % 24) +\n            ', минут: ' + Math.floor(min % 60) +\n            ', секунд: ' + Math.floor(ref.sec % 60);\n        console.log(day);\n        ref.sec -=1;\n        \nref.clockDays.textContent = pad(Math.floor(hour / 24));\nref.clockHours.textContent = pad(Math.floor(hour % 24));\nref.clockMinutes.textContent = pad(Math.floor(min % 60));\nref.clockSeconds.textContent = pad(Math.floor(ref.sec % 60));\n\n        if(ref.sec === 0) {\n            clearInterval(interval);\n            ref.startButton.disabled = false}\n}"],"names":["$5f21b1434f93d8c4$var$ref","inputDate","document","querySelector","startButton","containerForTime","divField","querySelectorAll","spanForTimeNumber","spanForTimeName","clockDays","clockHours","clockMinutes","clockSeconds","currentDate","Date","correctMonth","correctDay","correctYear","timeNumber","sec","interval","$5f21b1434f93d8c4$var$pad","value","String","padStart","style","cssText","forEach","key","getMonth","getDate","getFullYear","getTime","type","min","disabled","addEventListener","parse","setInterval","$5f21b1434f93d8c4$var$countSeconds","hour","day","Math","floor","console","log","textContent","clearInterval"],"version":3,"file":"04-timer_without_flatpickr.84a76dec.js.map"}